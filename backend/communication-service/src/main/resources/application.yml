# Community Connect Communication Service Configuration

server:
  port: 8083
  servlet:
    context-path: /api/v1

spring:
  application:
    name: communication-service
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  
  data:
    mongodb:
      host: ${MONGO_HOST:localhost}
      port: ${MONGO_PORT:27017}
      database: ${MONGO_DATABASE:communication_service}
      username: ${MONGO_USERNAME:mongo_user}
      password: ${MONGO_PASSWORD:mongo_pass}
      authentication-database: admin

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method

# Logging
logging:
  level:
    com.communityconnect: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:INFO}
    org.springframework.data.mongodb: ${MONGO_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Application specific properties
app:
  name: Community Connect Communication Service
  version: 1.0.0
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  
  websocket:
    allowed-origins: ${WS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
    endpoint: "/ws"
    message-destination: "/app"
    topic-destination: "/topic"
  
  messaging:
    max-message-length: ${MAX_MESSAGE_LENGTH:2000}
    message-retention-days: ${MESSAGE_RETENTION_DAYS:90}
    max-conversation-participants: ${MAX_PARTICIPANTS:2}
  
  notifications:
    retention-days: ${NOTIFICATION_RETENTION_DAYS:30}
    batch-size: ${NOTIFICATION_BATCH_SIZE:100}
    max-retry-attempts: ${MAX_RETRY_ATTEMPTS:3}
  
  email:
    from-address: ${EMAIL_FROM:noreply@communityconnect.co.ke}
    from-name: ${EMAIL_FROM_NAME:Community Connect}
    templates:
      base-url: ${EMAIL_TEMPLATE_BASE_URL:http://localhost:3000}

# External Service Clients
feign:
  client:
    config:
      core-service:
        url: ${CORE_SERVICE_URL:http://localhost:8081/api/v1}
        connect-timeout: 5000
        read-timeout: 10000
      transaction-service:
        url: ${TRANSACTION_SERVICE_URL:http://localhost:8082/api/v1}
        connect-timeout: 5000
        read-timeout: 10000

---
# Local Development Profile
spring:
  config:
    activate:
      on-profile: local

logging:
  level:
    com.communityconnect: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web.socket: DEBUG

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

management:
  endpoints:
    web:
      exposure:
        include: "*"

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod

logging:
  level:
    root: WARN
    com.communityconnect: INFO