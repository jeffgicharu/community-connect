# Community Connect Transaction Service Configuration

server:
  port: 8082
  servlet:
    context-path: /api/v1

spring:
  application:
    name: transaction-service
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:transaction_service}
    username: ${DB_USERNAME:transaction_user}
    password: ${DB_PASSWORD:transaction_pass}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method

# Logging
logging:
  level:
    com.communityconnect: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:INFO}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Application specific properties
app:
  name: Community Connect Transaction Service
  version: 1.0.0
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  
  transaction:
    default-credit-limit: ${DEFAULT_CREDIT_LIMIT:50}
    new-user-welcome-credits: ${NEW_USER_CREDITS:2}
    max-pending-requests: ${MAX_PENDING_REQUESTS:10}
    request-expiration-days: ${REQUEST_EXPIRATION_DAYS:7}
  
  credit:
    minimum-balance: ${MIN_CREDIT_BALANCE:0}
    maximum-balance: ${MAX_CREDIT_BALANCE:1000}
    precision: 2
  
  matching:
    radius-km: ${MATCHING_RADIUS_KM:10}
    max-matches: ${MAX_MATCHES:10}

# External Service Clients
feign:
  client:
    config:
      core-service:
        url: ${CORE_SERVICE_URL:http://localhost:8081/api/v1}
        connect-timeout: 5000
        read-timeout: 10000
      communication-service:
        url: ${COMMUNICATION_SERVICE_URL:http://localhost:8083/api/v1}
        connect-timeout: 5000
        read-timeout: 10000

---
# Local Development Profile
spring:
  config:
    activate:
      on-profile: local
  
  jpa:
    show-sql: true

logging:
  level:
    com.communityconnect: DEBUG
    org.springframework.security: DEBUG

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

management:
  endpoints:
    web:
      exposure:
        include: "*"

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  
  jpa:
    show-sql: false

logging:
  level:
    root: WARN
    com.communityconnect: INFO