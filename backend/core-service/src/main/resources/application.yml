# Core Service - Application Configuration
# Spring Boot configuration with profiles for different environments

spring:
  application:
    name: core-service
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  
  # Database Configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/core_service}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: CoreServiceHikariCP
      maximum-pool-size: ${DATABASE_POOL_SIZE:10}
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:validate}
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: false
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
    open-in-view: false
  
  # Security Configuration
  security:
    jwt:
      secret-key: ${JWT_SECRET:your-secret-key-here}
      expiration: ${JWT_EXPIRATION:86400000} # 24 hours
      refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 days
  
  # Mail Configuration
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  
  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:10MB}
      max-request-size: ${MAX_REQUEST_SIZE:10MB}

# Server Configuration
server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /api/v1
  error:
    include-message: always
    include-binding-errors: always

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# Application Configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  
  cloudinary:
    cloud-name: ${CLOUDINARY_CLOUD_NAME:}
    api-key: ${CLOUDINARY_API_KEY:}
    api-secret: ${CLOUDINARY_API_SECRET:}
  
  verification:
    email:
      expiration: ${EMAIL_VERIFICATION_EXPIRATION:3600000} # 1 hour
    phone:
      expiration: ${PHONE_VERIFICATION_EXPIRATION:600000} # 10 minutes

# Logging Configuration
logging:
  level:
    com.communityconnect.core: ${LOG_LEVEL:INFO}
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${SQL_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:logs/core-service.log}

# OpenAPI/Swagger Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
  info:
    title: Community Connect Core Service API
    description: User management, authentication, and service listings
    version: 1.0.0
    contact:
      name: Community Connect Team
      email: dev@communityconnect.com

---
# Local Development Profile
spring:
  config:
    activate:
      on-profile: local
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  
  h2:
    console:
      enabled: false

logging:
  level:
    com.communityconnect.core: DEBUG
    org.springframework.web: INFO

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker
  
  datasource:
    url: jdbc:postgresql://postgres-core:5432/core_service
  
  jpa:
    hibernate:
      ddl-auto: update

logging:
  level:
    com.communityconnect.core: INFO

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

logging:
  level:
    com.communityconnect.core: WARN
    root: WARN