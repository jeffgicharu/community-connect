# Community Connect Core Service Configuration

server:
  port: 8081
  servlet:
    context-path: /api/v1

spring:
  application:
    name: core-service
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:core_service}
    username: ${DB_USERNAME:core_user}
    password: ${DB_PASSWORD:core_pass}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public
  
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  
  security:
    jwt:
      secret: ${JWT_SECRET:community-connect-super-secret-key-change-in-production}
      expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds
      refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 days

# Cloudinary Configuration
cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME:}
  api-key: ${CLOUDINARY_API_KEY:}
  api-secret: ${CLOUDINARY_API_SECRET:}

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method

# Logging
logging:
  level:
    com.communityconnect: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:INFO}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Application specific properties
app:
  name: Community Connect Core Service
  version: 1.0.0
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  
  verification:
    email:
      expiration-minutes: ${EMAIL_VERIFICATION_EXPIRATION:60}
    phone:
      expiration-minutes: ${PHONE_VERIFICATION_EXPIRATION:5}
  
  file-upload:
    max-size: ${MAX_FILE_SIZE:5MB}
    allowed-types: image/jpeg,image/png,image/gif

---
# Local Development Profile
spring:
  config:
    activate:
      on-profile: local
  
  jpa:
    show-sql: true
  
  mail:
    host: smtp.gmail.com
    port: 587

logging:
  level:
    com.communityconnect: DEBUG
    org.springframework.security: DEBUG

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

management:
  endpoints:
    web:
      exposure:
        include: "*"

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  
  jpa:
    show-sql: false

logging:
  level:
    root: WARN
    com.communityconnect: INFO